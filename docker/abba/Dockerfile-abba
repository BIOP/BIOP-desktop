ARG QUPATH_VERSION=v0.6.0
ARG FIJI_VERSION=20250319
ARG DEEPSLICE_VERSION=1.1.5
ARG BRAINRENDER_VERSION=0.1.3
ARG ALIAS=biop/

FROM ${ALIAS}biop-qupath:${QUPATH_VERSION} AS qupath-image
FROM ${ALIAS}biop-fiji:${FIJI_VERSION} AS fiji-image
FROM ${ALIAS}biop-deepslice:${DEEPSLICE_VERSION} AS deepslice-image
FROM ${ALIAS}biop-brainrender:${BRAINRENDER_VERSION} AS brainrender-image

FROM ${ALIAS}biop-vnc-base:0.2.2 AS base


USER root

RUN mkdir -p /home/biop/Desktop && chown -R biop:biop /home/biop/Desktop 


# install elastix  
#version 5.1.0 is not working with the current ABBA version, so we use 5.0.1 , is a zip on github

# version 5.0.1 is tar.bz2 on github
RUN wget https://github.com/SuperElastix/elastix/releases/download/5.0.1/elastix-5.0.1-linux.tar.bz2 
RUN tar -xf elastix-5.0.1-linux.tar.bz2 \
    && mv elastix-5.0.1-linux /opt/elastix \
    && chmod -R a+rwx /opt/elastix \
    && rm elastix-5.0.1-linux.tar.bz2

RUN chown -R biop:biop /opt/elastix \
    && chmod  a+rwx /opt/elastix/bin/elastix \
    && chmod  a+rwx /opt/elastix/bin/transformix  

ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/elastix/lib

################################################################# 
# Install QuPath 
# 
COPY --from=qupath-image /opt/QuPath /opt/QuPath
COPY --from=qupath-image /home/biop/Desktop/QuPath.desktop  /home/biop/Desktop/QuPath.desktop
COPY --from=qupath-image /opt/icons/start_qp.sh /opt/icons/start_qp.sh
# Prepare to set QP_prefs , see below `QuPath_setPaths.groovy`
COPY QuPath/prefs/* /home/biop/tmp/


#################################################################
# Install Fiji
COPY --from=fiji-image /opt/Fiji.app /opt/Fiji.app
# create icon
COPY --from=fiji-image /home/biop/Desktop/Fiji.desktop /home/biop/Desktop/Fiji.desktop
COPY abba/ABBA_Atlas_folder.txt /opt/Fiji.app/plugins/BIOP/ABBA_Atlas_folder.txt
# set FIJI text to set the path to atlases
COPY fiji/Fiji_setWrappersPaths.groovy /home/biop/tmp/Fiji_setWrappersPaths.groovy

#################################################################
# install deepslice 
COPY --from=deepslice-image /opt/conda/envs/deepslice /opt/conda/envs/deepslice


#################################################################
# install abba_python
# dependencies from https://github.com/BIOP/abba-installer/blob/main/construct.yaml 
# and abba_python from https://pypi.org/project/abba-python/
COPY abba/env_abba_python.yml /tmp/env_abba_python.yml
RUN conda env update -n abba_python -f /tmp/env_abba_python.yml \
    && conda clean --all -f -y \
    && conda env export -n "biop" \ 
    && rm /tmp/env_abba_python.yml

# add a script to use deepslice from command line
RUN wget https://raw.githubusercontent.com/BIOP/ijl-utilities-wrappers/master/src/main/resources/deepslice_cli_v1.1.5.1.py -O /opt/conda/envs/deepslice/deepslice_cli_v1.1.5.1.py 
# set permissions
RUN chown biop:biop /opt/conda/envs/deepslice/ \
    && chmod a+rwx /opt/conda/envs/deepslice/deepslice_cli_v1.1.5.1.py 

# When removing RUN chown biop:biop /opt/conda/envs/deepslice/ && chmod -R a+rwx /opt/conda/envs/deepslice/ 
# tries to download but fails, so we download the weights manually
RUN wget https://data-proxy.ebrains.eu/api/v1/buckets/deepslice/weights/xception_weights_tf_dim_ordering_tf_kernels.h5 -O /opt/conda/envs/deepslice/lib/python3.7/site-packages/DeepSlice/metadata/weights/xception_weights_tf_dim_ordering_tf_kernels.h5 \
    && wget https://data-proxy.ebrains.eu/api/v1/buckets/deepslice/weights/Allen_Mixed_Best.h5 -O /opt/conda/envs/deepslice/lib/python3.7/site-packages/DeepSlice/metadata/weights/Allen_Mixed_Best.h5 \ 
    && wget https://data-proxy.ebrains.eu/api/v1/buckets/deepslice/weights/Synthetic_data_final.hdf5 -O /opt/conda/envs/deepslice/lib/python3.7/site-packages/DeepSlice/metadata/weights/Synthetic_data_final.hdf5
# set permissions
RUN chmod a+rwx /opt/conda/envs/deepslice/lib/python3.7/site-packages/DeepSlice/metadata/weights/xception_weights_tf_dim_ordering_tf_kernels.h5 \
    && chmod a+rwx /opt/conda/envs/deepslice/lib/python3.7/site-packages/DeepSlice/metadata/weights/Allen_Mixed_Best.h5 \
    && chmod a+rwx /opt/conda/envs/deepslice/lib/python3.7/site-packages/DeepSlice/metadata/weights/Synthetic_data_final.hdf5


# Copy atlases from zenodo repo
# IDK why I need to first use the -P and mv, rather than directly use -O (got an error :  No such file or directory )
RUN wget https://zenodo.org/records/4173229/files/ccf2017-mod65000-border-centered-mm-bc.h5?download=1 -P /opt/abba/cached_atlas/  \
    && mv /opt/abba/cached_atlas/ccf2017-mod65000-border-centered-mm-bc.h5?download=1 /opt/abba/cached_atlas/ccf2017-mod65000-border-centered-mm-bc.h5 \    
    && wget https://zenodo.org/records/4173229/files/ccf2017-mod65000-border-centered-mm-bc.xml?download=1 -P  /opt/abba/cached_atlas/ \
    && mv /opt/abba/cached_atlas/ccf2017-mod65000-border-centered-mm-bc.xml?download=1 /opt/abba/cached_atlas/ccf2017-mod65000-border-centered-mm-bc.xml \
    && wget https://zenodo.org/records/4173229/files/1.json?download=1 -P /opt/abba/cached_atlas/\
    && mv /opt/abba/cached_atlas/1.json?download=1 /opt/abba/cached_atlas/1.json
# set permissions
RUN chown -R biop:biop /opt/abba/cached_atlas/ \
    && chmod -R a+rwX /opt/abba/cached_atlas/

# Make a desktop icon for ABBA
# modified from : https://github.com/BIOP/abba-installer/blob/main/abba/start-abba.py
COPY abba/abba_run.py /opt/abba/abba_run.py 
# set permissions
RUN chown biop:biop /opt/abba/abba_run.py \
    && chmod a+rwx /opt/abba/abba_run.py

# make Fiji not read only
RUN  chown -R biop:biop /opt/Fiji.app/ \
    && chmod -R a+rwX /opt/Fiji.app/

# install brainrender
COPY --from=brainrender-image /opt/conda/envs/brainrender /opt/conda/envs/brainrender
 
USER biop

# adds brainrender kernel
RUN source activate brainrender \
    && python -m ipykernel install --user --name brainrender --display-name "Python (brainrender)" \
    && conda deactivate

# download allen_mouse_25um atlas
RUN source activate brainrender \
    && brainglobe install -a allen_mouse_25um \
    && conda deactivate

#set back root 
USER root 

# Make icons 
COPY icons/* /opt/icons/
#################################################################
# Create shortcuts
# to start ABBA
RUN printf 'source activate abba_python\npython /opt/abba/abba_run.py\n\$ read -rsp \$"Press enter to continue..."\n"Press enter to continue..."' > /opt/icons/start_abba.sh \
    && printf '[Desktop Entry]\nVersion=0.10.4\nName=ABBA\nGenericName=ABBA\nX-GNOME-FullName=ABBA\nComment=Scientific Image Analysis\nType=Application\nCategories=Education;Science;ImageProcessing;\nExec=/opt/icons/start_abba.sh\nTryExec=/opt/icons/start_abba.sh\nTerminal=true\nStartupNotify=true\nMimeType=image/*;\nIcon=/opt/icons/abba.png\nStartupWMClass=ABBA\n' > /home/biop/Desktop/abba.desktop \
# to start fiji
    && printf '[Desktop Entry]\nVersion=1.0\nName=ImageJ\nGenericName=ImageJ\nX-GNOME-FullName=ImageJ\nComment=Scientific Image Analysis\nType=Application\nCategories=Education;Science;ImageProcessing;\nExec=/opt/Fiji.app/ImageJ-linux64 %F\nTryExec=/opt/Fiji.app/ImageJ-linux64\nTerminal=false\nStartupNotify=true\nMimeType=image/*;\nIcon=/opt/Fiji.app/images/icon.png\nStartupWMClass=net-imagej-launcher-ClassLauncher\n' > /home/biop/Desktop/Fiji.desktop \
# to start napari with brainrender
    && printf 'source activate brainrender\nnapari\n\$ read -rsp \$"Press enter to continue..."' > /opt/icons/start_brainrender.sh \
    && printf '[Desktop Entry]\nVersion=0.0.7\nName=brainrender\nGenericName=brainrender\nX-GNOME-FullName=brainrender\nComment=Scientific Image Analysis\nType=Application\nCategories=Education;Science;ImageProcessing;\nExec=/opt/icons/start_brainrender.sh\nTryExec=/opt/icons/start_brainrender.sh\nTerminal=true\nStartupNotify=true\nIcon=/opt/icons/brainglobe.png\nStartupWMClass=brainrender\n' > /home/biop/Desktop/brainrender.desktop
  
RUN chown -R biop:biop /home/biop/ /opt/icons/  \
    && chmod -R a+rwx /home/biop/  /opt/icons/ 

#################################################################
# Container start
USER biop
RUN /opt/QuPath/bin/QuPath script '/home/biop/tmp/QuPath_setPaths.groovy' \
    && /opt/Fiji.app/ImageJ-linux64 --headless --run /home/biop/tmp/Fiji_setWrappersPaths.groovy \
    && rm -rf /home/biop/tmp
WORKDIR /home/biop
ENTRYPOINT ["/usr/local/bin/jupyter"]
#CMD ["lab", "--allow-root", "--ip=*", "--port=8888", "--no-browser", "--NotebookApp.token=''", "--NotebookApp.allow_origin='*'", "--notebook-dir=/home/biop"]
CMD ["lab", "--allow-root", "--ip=*", "--port=8888", "--no-browser", "--NotebookApp.token=''", "--NotebookApp.allow_origin='*'", "--notebook-dir="]