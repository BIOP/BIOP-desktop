ARG FIJI_VERSION=20231024
FROM biop-fiji:${FIJI_VERSION} as fiji-image

FROM nvcr.io/nvidia/tensorflow:23.07-tf2-py3

#################################################################
# Install 
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update -y \
    && apt upgrade -y \
    && apt-get install -yq --no-install-recommends \
        dbus-x11 \
        net-tools \
        less \
        xfce4 \
        xfce4-panel \
        xfce4-session \
        xfce4-settings \
        xorg \
        xubuntu-icon-theme \
        gnome-terminal \
        fonts-dejavu \
        git-gui \
        gitk \
        emacs \
        sudo \
    && apt-get autoremove --purge \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && rm -rf /tmp/* \
    && find /var/log -type f -exec cp /dev/null \{\} \;

#################################################################
# Create BIOP user
RUN echo "biop ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/biop
RUN useradd -m biop -G root

#################################################################
# Install the jupyter extensions
RUN pip install jupyter-server-proxy jupyterlab-drawio --no-cache-dir
RUN apt update \
    && apt install nodejs npm websockify -y \
    && apt-get autoremove --purge \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && rm -rf /tmp/* \
    && find /var/log -type f -exec cp /dev/null \{\} \;
COPY --chown=biop:biop jupyter_notebook_config.py /home/biop/.jupyter/jupyter_notebook_config.py

################################################################
# Install TigerVNC 1.9.0 -> Test 1.13.1
ENV tigervnc_version=1.10.1
RUN curl -sSfL https://sourceforge.net/projects/tigervnc/files/stable/${tigervnc_version}/tigervnc-${tigervnc_version}.x86_64.tar.gz/download | tar -zxf - -C /usr/local --strip=2

#################################################################
# Install noVNC 1.1.0 -> test 1.4.0
ENV novnc_version=1.1.0
RUN curl -sSfL https://github.com/novnc/noVNC/archive/v${novnc_version}.tar.gz | tar xvz -C /opt/ && \
    chmod a+rX -R /opt/noVNC-${novnc_version}
# Custom interface
COPY --chown=root:root vnc_renku.html /opt/noVNC-${novnc_version}
# Custom ui.js
COPY --chown=root:root ui.js /opt/noVNC-${novnc_version}/app/ui.js
# COPY --chown=root:root renku-48x48.png /opt/noVNC-${novnc_version}/app/images/icons
# COPY --chown=root:root base.css /opt/noVNC-${novnc_version}/app/styles/base.css
# COPY --chown=root:root fonts /opt/noVNC-${novnc_version}/app/styles/fonts

#################################################################
# Install firefox
RUN wget 'https://download.mozilla.org/?product=firefox-latest-ssl&os=linux64' -O /tmp/firefox.tar.bz2 \
    && tar xjf /tmp/firefox.tar.bz2 -C /opt/ \
    && rm -rf /tmp/firefox.tar.bz2 \
    && ln -sf /opt/firefox/firefox /usr/bin/firefox \
    && apt update \
    && apt install libdbus-glib-1-2 -y \
    && apt-get autoremove --purge \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && rm -rf /tmp/* \
    && find /var/log -type f -exec cp /dev/null \{\} \;
ENV BROWSER=firefox

#################################################################
# Install Fiji
COPY --from=fiji-image /opt/Fiji.app /opt/Fiji.app
# create icon
RUN mkdir -p /home/biop/Desktop && chown -R biop:biop /home/biop/Desktop \
    && printf '[Desktop Entry]\nVersion=1.0\nName=ImageJ\nGenericName=ImageJ\nX-GNOME-FullName=ImageJ\nComment=Scientific Image Analysis\nType=Application\nCategories=Education;Science;ImageProcessing;\nExec=/opt/Fiji.app/ImageJ-linux64 %F\nTryExec=/opt/Fiji.app/ImageJ-linux64\nTerminal=false\nStartupNotify=true\nMimeType=image/*;\nIcon=/opt/Fiji.app/images/icon.png\nStartupWMClass=net-imagej-launcher-ClassLauncher\n' > /home/biop/Desktop/Fiji.desktop \
    && chown -R biop:biop /home/biop \
    && chmod +x /home/biop/Desktop/Fiji.desktop \
    # to make fiji updatable, remove to make it read only, not updatable
    && chmod -R a+rwX /opt/Fiji.app 


#################################################################
# Adds models and dataset to test stardist
# avaiblable from https://zenodo.org/record/6645978 
# COPY stardist/models.zip /home/biop/stardist/models.zip
# RUN unzip /home/biop/stardist/models.zip -d /home/biop/stardist/models/ \ 
#     && rm /home/biop/stardist/models.zip \
#     && mv '/home/biop/stardist/models/n1_stardist_96_(1.6, 1, 1)_(48, 64, 64)_(1, 1, 1)' /home/biop/stardist/models/n1_stardist \
#     && mv '/home/biop/stardist/models/n2_stardist_96_(1.6, 1, 1)_(48, 64, 64)_(1, 1, 1)' /home/biop/stardist/models/n2_stardist \
#     && mv '/home/biop/stardist/models/n3_stardist_96_(1.6, 1, 1)_(48, 64, 64)_(1, 1, 1)' /home/biop/stardist/models/n3_stardist 

# COPY stardist/annotations_BIOP.zip /home/biop/stardist/annotations.zip
# RUN unzip /home/biop/stardist/annotations.zip -d /home/biop/stardist/annotations \ 
#     && rm /home/biop/stardist/annotations.zip

# Install miniconda
ENV CONDA_DIR /opt/conda
RUN wget -q https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh \
   && /bin/bash ~/miniconda.sh -b -p /opt/conda
#Put conda in path so we can use conda activate
ENV PATH=$PATH:$CONDA_DIR/bin

# Because I coulnd't get mamba to work, changethe libserver , thanks @oli ! ;) 
# https://www.anaconda.com/blog/a-faster-conda-for-a-growing-community 
RUN conda update -n base conda \
    && conda install -n base conda-libmamba-solver \ 
    && conda config --set solver libmamba

##############################################################################
#install StarDist
COPY stardist/env_stardist.yml /tmp/env_stardist.yml
RUN conda env update -n stardist -f /tmp/env_stardist.yml \
    && rm /tmp/env_stardist.yml \
    && conda clean --all -f -y \
    && conda env export -n "biop" 

#################################################################
# Container start
USER biop
WORKDIR /home/biop
ENTRYPOINT ["/usr/local/bin/jupyter"]
CMD ["lab", "--allow-root", "--ip=*", "--port=8888", "--no-browser", "--NotebookApp.token=''", "--NotebookApp.allow_origin='*'", "--notebook-dir=/"]
